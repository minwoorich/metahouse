<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.multi.metahaus.asset">

    <!-- <insert id="insertAsset" parameterType="asset">
        INSERT INTO assets VALUES (null, #{seller_id}, #{title}, #{category1}, #{category2_as}, #{description}, #{price}, #{main_img}, #{asset_date}, #{asset_hits})
    </insert>
    
    <select id="selectAsset" resultType="String">
    	select last_insert_id()
    </select>
    
    <insert id="insertOptionalFile" parameterType="java.util.List">
    	insert into asset_detail_img values
    	<foreach collection="list" item="file" separator=",">
			(null, #{file.asset_id}, #{file.asset_detail_img_store_filename}, #{file.asset_fileno})
    	</foreach>
    </insert>
    
    <insert id="insertAttachFile" parameterType="java.util.List">
    	insert into asset_content values
    	<foreach collection="list" item="file" separator=",">
    		(null,  #{file.asset_id}, #{file.asset_store_filename}, #{file.asset_fileno})
    	</foreach>
    </insert>
     -->

    

    <select id="getAssetById" parameterType="int" resultType="com.multi.metahouse.domain.dto.asset.AssetDTO">
        SELECT * FROM assets WHERE asset_id = #{assetId}
    </select>

    <select id="getAllAssets" parameterType="hashMap" resultType="com.multi.metahouse.domain.dto.asset.AssetDTO">
        SELECT a.* FROM assets a
        <where>
				<if test="category1 !='Non' and category2_as =='Non'">
				a.category1 = #{category1}
				</if>
				<if test="category1 !='Non' and category2_as != 'Non'">
				a.category1 = #{category1}
			  		AND a.category2_as = #{category2_as}
				</if>
			</where>
			ORDER BY a.asset_date DESC
			<if test="skip != null">
			limit ${(skip-1)*16},16
			</if>
    </select>
<!-- ******************************************************************************************************************** -->

	<resultMap type="asset" id="aInfo">
        <id column="asset_id" property="asset_id"/>
        <result column="seller_id" property="seller_id"/>
        <result column="title" property="title"/>
        <result column="category1" property="category1"/>
        <result column="category2_as" property="category2_as"/>
        <result column="description" property="description"/>
        <result column="price" property="price"/>
        <result column="main_img" property="main_img"/>
        <result column="asset_date" property="asset_date"/>
        <result column="user_name" property="userName.userName"/>
	</resultMap>
	
    <select id="AssetInfo" parameterType="string" resultMap="aInfo">
        select a.asset_id, a.seller_id, title, a.category1, a.category2_as, a.description, a.price, a.main_img, a.asset_date,
			 u.user_name
        from assets a
        	inner join user u
        		on a.seller_id=u.user_id 
        where a.asset_id = #{asset_id}
    </select>
    <select id="AssetImgs" parameterType="string" resultType="com.multi.metahouse.domain.dto.asset.AssetDetailImgDTO">
        select * from  ASSET_DETAIL_IMG
        where asset_id= #{assetId}
    </select>
    <select id="AssetContents" parameterType="string" resultType="com.multi.metahouse.domain.dto.asset.AssetContentDTO">
        select * from asset_content 
        where asset_id= #{assetId}
    </select>
    
    <!-- LCH -->
    <resultMap type="asset" id="assetWithReviewAvg">
        <id column="asset_id" property="asset_id"/>
        <result column="seller_id" property="seller_id"/>
        <result column="title" property="title"/>
        <result column="category1" property="category1"/>
        <result column="category2_as" property="category2_as"/>
        <result column="description" property="description"/>
        <result column="price" property="price"/>
        <result column="main_img" property="main_img"/>
        <result column="asset_date" property="asset_date"/>
        <result column="asset_hit" property="asset_hit"/>
        <result column="average_reviews" property="average_reviews" />
        <result column="review_count" property="review_count" />
	</resultMap>
	
    <select id="findOrderByReviewRating" parameterType="int" resultMap="assetWithReviewAvg">
    	SELECT a.*, count(r.asset_review_id) review_count, AVG(r.rating) AS average_reviews
		FROM assets a
		LEFT JOIN asset_review r ON a.asset_id = r.asset_id
		GROUP BY a.asset_id
		order by average_reviews desc
		limit #{limit}
    </select>
    
    <!-- 세희 -->
    <select id="findAssetInfo" parameterType="String" resultMap="assetWithReviewAvg">
    	SELECT a.*, count(r.asset_review_id) review_count, AVG(r.rating) AS average_reviews
		FROM assets a
		LEFT JOIN asset_review r ON a.asset_id = r.asset_id
		WHERE seller_id=#{seller_id}
		GROUP BY a.asset_id
		order by average_reviews desc
    </select>
</mapper>